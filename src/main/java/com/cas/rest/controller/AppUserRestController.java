/*
 * Created on 4 May 2016 ( Time 15:52:09 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.cas.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.cas.bean.AppUser;
import com.cas.business.service.AppUserService;
import com.cas.web.listitem.AppUserListItem;

/**
 * Spring MVC controller for 'AppUser' management.
 */
@Controller
public class AppUserRestController {

	@Resource
	private AppUserService appUserService;
	
	@RequestMapping( value="/items/appUser",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<AppUserListItem> findAllAsListItems() {
		List<AppUser> list = appUserService.findAll();
		List<AppUserListItem> items = new LinkedList<AppUserListItem>();
		for ( AppUser appUser : list ) {
			items.add(new AppUserListItem( appUser ) );
		}
		return items;
	}
	
	@RequestMapping( value="/appUser",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<AppUser> findAll() {
		return appUserService.findAll();
	}

	@RequestMapping( value="/appUser/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public AppUser findOne(@PathVariable("id") Long id) {
		return appUserService.findById(id);
	}
	
	@RequestMapping( value="/appUser",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public AppUser create(@RequestBody AppUser appUser) {
		return appUserService.create(appUser);
	}

	@RequestMapping( value="/appUser/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public AppUser update(@PathVariable("id") Long id, @RequestBody AppUser appUser) {
		return appUserService.update(appUser);
	}

	@RequestMapping( value="/appUser/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		appUserService.delete(id);
	}
	
}
