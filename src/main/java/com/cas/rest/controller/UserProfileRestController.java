/*
 * Created on 4 May 2016 ( Time 15:52:09 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.cas.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.cas.bean.UserProfile;
import com.cas.business.service.UserProfileService;
import com.cas.web.listitem.UserProfileListItem;

/**
 * Spring MVC controller for 'UserProfile' management.
 */
@Controller
public class UserProfileRestController {

	@Resource
	private UserProfileService userProfileService;
	
	@RequestMapping( value="/items/userProfile",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<UserProfileListItem> findAllAsListItems() {
		List<UserProfile> list = userProfileService.findAll();
		List<UserProfileListItem> items = new LinkedList<UserProfileListItem>();
		for ( UserProfile userProfile : list ) {
			items.add(new UserProfileListItem( userProfile ) );
		}
		return items;
	}
	
	@RequestMapping( value="/userProfile",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<UserProfile> findAll() {
		return userProfileService.findAll();
	}

	@RequestMapping( value="/userProfile/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public UserProfile findOne(@PathVariable("id") Long id) {
		return userProfileService.findById(id);
	}
	
	@RequestMapping( value="/userProfile",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public UserProfile create(@RequestBody UserProfile userProfile) {
		return userProfileService.create(userProfile);
	}

	@RequestMapping( value="/userProfile/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public UserProfile update(@PathVariable("id") Long id, @RequestBody UserProfile userProfile) {
		return userProfileService.update(userProfile);
	}

	@RequestMapping( value="/userProfile/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Long id) {
		userProfileService.delete(id);
	}
	
}
