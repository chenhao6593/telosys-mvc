/*
 * Created on 4 May 2016 ( Time 15:50:04 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.cas.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "app_user"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="app_user", catalog="ssd" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="AppUserEntity.countAll", query="SELECT COUNT(x) FROM AppUserEntity x" )
} )
public class AppUserEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Long       id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="sso_id", nullable=false, length=30)
    private String     ssoId        ;

    @Column(name="password", nullable=false, length=100)
    private String     password     ;

    @Column(name="first_name", nullable=false, length=30)
    private String     firstName    ;

    @Column(name="last_name", nullable=false, length=30)
    private String     lastName     ;

    @Column(name="email", nullable=false, length=30)
    private String     email        ;

    @Column(name="state", nullable=false, length=30)
    private String     state        ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToMany(targetEntity=UserProfileEntity.class)
    @JoinTable(name="app_user_user_profile", 
      joinColumns=@JoinColumn(name="user_id", referencedColumnName="id"),
      inverseJoinColumns=@JoinColumn(name="user_profile_id", referencedColumnName="id")
     ) 

    private List<UserProfileEntity> listOfUserProfile;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public AppUserEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Long id ) {
        this.id = id ;
    }
    public Long getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : sso_id ( VARCHAR ) 
    public void setSsoId( String ssoId ) {
        this.ssoId = ssoId;
    }
    public String getSsoId() {
        return this.ssoId;
    }

    //--- DATABASE MAPPING : password ( VARCHAR ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    public String getPassword() {
        return this.password;
    }

    //--- DATABASE MAPPING : first_name ( VARCHAR ) 
    public void setFirstName( String firstName ) {
        this.firstName = firstName;
    }
    public String getFirstName() {
        return this.firstName;
    }

    //--- DATABASE MAPPING : last_name ( VARCHAR ) 
    public void setLastName( String lastName ) {
        this.lastName = lastName;
    }
    public String getLastName() {
        return this.lastName;
    }

    //--- DATABASE MAPPING : email ( VARCHAR ) 
    public void setEmail( String email ) {
        this.email = email;
    }
    public String getEmail() {
        return this.email;
    }

    //--- DATABASE MAPPING : state ( VARCHAR ) 
    public void setState( String state ) {
        this.state = state;
    }
    public String getState() {
        return this.state;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfUserProfile( List<UserProfileEntity> listOfUserProfile ) {
        this.listOfUserProfile = listOfUserProfile;
    }
    public List<UserProfileEntity> getListOfUserProfile() {
        return this.listOfUserProfile;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(ssoId);
        sb.append("|");
        sb.append(password);
        sb.append("|");
        sb.append(firstName);
        sb.append("|");
        sb.append(lastName);
        sb.append("|");
        sb.append(email);
        sb.append("|");
        sb.append(state);
        return sb.toString(); 
    } 

}
